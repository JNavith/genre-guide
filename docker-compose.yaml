#    genre.guide - master docker-compose file
#    Copyright (C) 2018 Navith
#    
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#    
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#    
#    You should have received a copy of the GNU Affero General Public License
#    along with this program. If not, see <https://www.gnu.org/licenses/>.

version: '3.6'



services:
  __python3-base-image:
    build:
      args:
        python_tag: ${GG_PYTHON3_BASE_IMAGE}
      context: ./api
      dockerfile: ./python3-base.Dockerfile
    # Prevent failing actions if the container is accidentally started
    command: /bin/true
    image: python3-base:${GG_PYTHON3_BASE_IMAGE}
  
  __starlette-base-image:
    build:
      args:
        python3_base_tag: ${GG_PYTHON3_BASE_IMAGE}
        starlette_version: 0.9.9
        uvicorn_version: 0.3.23
      context: ./api/graphql-server
      dockerfile: ./starlette.Dockerfile
    # Prevent failing actions if the container is accidentally started
    command: /bin/true
    image: starlette:0.9.9-0.3.23
  
  caddy:
    container_name: caddy
    env_file:
      - ./config-and-secrets/caddy.env
    hostname: caddy
    image: abiosoft/caddy:0.11.1
    networks:
      web-public:
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./Caddyfile:/etc/Caddyfile:ro
      - ./dist/css:/srv/css:ro
      - ./branding:/srv/img:ro
  
  graphql-server:
    build:
      args:
        aioredis_version: 1.2.0
        graphene_version: 2.1.3
        starlette_tag: 0.9.9-0.3.23
      context: ./api/graphql-server
    command: ["python3", "-m", "graphql-server"]
    container_name: graphql-server
    env_file:
      - ./config-and-secrets/redis.env
    image: graphql-server:dev
    networks:
      db:
      web-public:
      web-private:
    restart: always
    volumes:
      - ./api/graphql-server/__main__.py:/app/graphql-server/__main__.py:ro
      - ./api/graphql-server/__init__.py:/app/graphql-server/__init__.py:ro
      - ./api/genre_utils.py:/app/graphql-server/genre_utils.py:ro
  
  redis:
    # Uncomment this line if you are not using the provided Redis container
    # command: /bin/true
    container_name: redis
    env_file:
      - ./config-and-secrets/redis.env
    image: bitnami/redis:5.0.3-debian-9-r6
    networks:
      db:
    # Comment this line if you are not using the provided Redis container
    restart: always
    sysctls:
      net.core.somaxconn: 4096
    volumes:
      - ./redis:/bitnami/redis/data
  
  sheet-to-db:
    build:
      args:
        aioredis_version: 1.2.0
        gspread_version: 3.0.1
        gspread_formatting_version: 0.0.3
        python3_base_tag: ${GG_PYTHON3_BASE_IMAGE}
        oauth2client_version: 4.1.3
      context: ./sheet-to-db
    # Uncomment to run tests
    # todo: move tests to api
    # command: ["sh", "./run-tests.sh"]
    command: ["python3", "-m", "app"]
    container_name: sheet-to-db
    env_file:
      - ./config-and-secrets/redis.env
      - ./config-and-secrets/google-sheets.env
    environment:
      # For running tests
      pytest_version: 4.0.2
    image: sheet-to-db:3.0.1
    networks:
      db:
    # Uncomment to intervene on malformed data
    stdin_open: true
    tty: true
    volumes:
      - ./sheet-to-db/__init__.py:/app/__init__.py:ro
      - ./sheet-to-db/__main__.py:/app/__main__.py:ro
      - ./sheet-to-db/genres.py:/app/genres.py:ro
      - ./sheet-to-db/tracks.py:/app/tracks.py:ro
      - ./config-and-secrets/client_secret.json:/app/client_secret.json:ro
      - ./api/genre_utils.py:/app/genre_utils.py:ro
      - ./api/track_utils.py:/app/track_utils.py:ro
    working_dir: /
  
  webpack:
    build:
      args:
        node_tag: 11.1.0-alpine
      context: ./webpack
    #    command: ["npm", "run", "dev"]
    container_name: webpack
    image: webpack:2.1.14
    networks:
      web-private:
    volumes:
      - ./webpack/tailwind.postcss:/home/node/src/css/tailwind.postcss:ro
      - ./webpack/tailwind.js:/home/node/tailwind.js:ro
      - ./webpack/webpack.config.js:/home/node/webpack.config.js:ro
      - ./webpack/postcss.config.js:/home/node/postcss.config.js:ro
      - ./web/templates:/home/node/src/html:ro
      - ./dist/css:/home/node/dist/css


networks:
  db:
  web-public:
  web-private:
